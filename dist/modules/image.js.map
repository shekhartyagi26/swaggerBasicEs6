{"version":3,"sources":["../../src/modules/image.js"],"names":["STORAGE","uploadPath","diskStorage","destination","req","file","callback","dest","sync","filename","fileUniquename","Date","now","extname","originalname","PROFILE_IMAGE_FORMAT","path","typeOf","lookup","includes","DELETE_IMAGE","unlink","DEFAULT_FILE","data","actual_path","post_url","replace","file_format","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA;AACA,IAAMA,UAAU,SAAVA,OAAU,GAAqB;AAAA,QAApBC,UAAoB,uEAAP,EAAO;;AACjC,WAAO,iBAAOC,WAAP,CAAmB;AACtBC,qBAAa,qBAASC,GAAT,EAAcC,IAAd,EAAoBC,QAApB,EAA8B;AACvC,gBAAIC,oBAAkBN,UAAtB;AACA,6BAAOO,IAAP,CAAYD,IAAZ;AACAD,qBAAS,IAAT,EAAeC,IAAf;AACH,SALqB;AAMtBE,kBAAU,kBAASL,GAAT,EAAcC,IAAd,EAAoBC,QAApB,EAA8B;AACpC,gBAAII,iBAAiBC,KAAKC,GAAL,EAArB;AACAN,qBAAS,IAAT,EAAeI,iBAAiB,eAAKG,OAAL,CAAaR,KAAKS,YAAlB,CAAhC;AACH;AATqB,KAAnB,CAAP;AAWH,CAZD;;AAcA;AACA,IAAMC,uBAAuB,SAAvBA,oBAAuB,GAAe;AAAA,QAAdC,IAAc,uEAAP,EAAO;;AACxC;AACA,QAAIC,SAAS,eAAKC,MAAL,CAAYF,IAAZ,CAAb;AACA,WAAOC,OAAOE,QAAP,CAAgB,OAAhB,IAA2B,CAA3B,GAA+BF,OAAOE,QAAP,CAAgB,OAAhB,IAA2B,CAA3B,GAA+B,CAArE;AACH,CAJD;;AAMA;AACA,IAAMC,eAAe,SAAfA,YAAe,CAACJ,IAAD,EAAU;AAC3B;AACA,iBAAGK,MAAH,CAAUL,IAAV,EAAgB,YAAW;AACvB;AACH,KAFD;AAGH,CALD;;AAOA,IAAMM,eAAe,SAAfA,YAAe,GAAe;AAAA,QAAdjB,IAAc,uEAAP,EAAO;;AAChC,QAAIkB,OAAO,EAAX;AACAA,SAAKC,WAAL,GAAmBnB,KAAKW,IAAxB;AACAO,SAAKE,QAAL,GAAgBpB,KAAKW,IAAL,CAAUU,OAAV,CAAkB,UAAlB,EAA8B,EAA9B,CAAhB;AACAH,SAAKI,WAAL,GAAmBZ,qBAAqBV,KAAKI,QAA1B,CAAnB;AACA,WAAOc,IAAP;AACH,CAND;AAOAK,OAAOC,OAAP,GAAiB;AACb7B,oBADa;AAEbe,8CAFa;AAGbK,8BAHa;AAIbE;AAJa,CAAjB","file":"image.js","sourcesContent":["import mkdirp from \"mkdirp\";\nimport multer from \"multer\";\nimport path from \"path\";\nimport mime from \"mime\";\nimport fs from \"fs\";\nimport { BAD_REQUEST_STATUS } from '../constant/status';\nimport { createUniqueId } from \"./generic\";\n\n// image path for uploading image\nconst STORAGE = (uploadPath = '') => {\n    return multer.diskStorage({\n        destination: function(req, file, callback) {\n            let dest = `uploads/${uploadPath}`;\n            mkdirp.sync(dest);\n            callback(null, dest);\n        },\n        filename: function(req, file, callback) {\n            var fileUniquename = Date.now();\n            callback(null, fileUniquename + path.extname(file.originalname));\n        }\n    });\n}\n\n//get profile picture format 1 for video and 2 for image\nconst PROFILE_IMAGE_FORMAT = (path = '') => {\n    // PROFILE_IMAGE_FORMAT(req.file.filename)\n    let typeOf = mime.lookup(path);\n    return typeOf.includes('video') ? 1 : typeOf.includes('image') ? 2 : 0;\n}\n\n//remove the image from system\nconst DELETE_IMAGE = (path) => {\n    // DELETE_IMAGE(req.file.path);\n    fs.unlink(path, function() {\n        return;\n    })\n}\n\nconst DEFAULT_FILE = (file = {}) => {\n    let data = {};\n    data.actual_path = file.path;\n    data.post_url = file.path.replace('uploads/', \"\");\n    data.file_format = PROFILE_IMAGE_FORMAT(file.filename);\n    return data;\n}\nmodule.exports = {\n    STORAGE,\n    PROFILE_IMAGE_FORMAT,\n    DELETE_IMAGE,\n    DEFAULT_FILE\n};"]}