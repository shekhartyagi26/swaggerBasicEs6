{"version":3,"sources":["../../src/modules/twilio.js"],"names":["sendMessageTwilio","body","to","Promise","resolve","reject","client","twilio_accountSid","twilio_authToken","messages","create","from","twilio_number","err","message","sid"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,oBAAoB,SAApBA,iBAAoB,CAACC,IAAD,EAAOC,EAAP,EAAc;AACpC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,YAAIC,SAAS,qBAAW,iBAAOC,iBAAlB,EAAqC,iBAAOC,gBAA5C,CAAb;AACAF,eAAOG,QAAP,CAAgBC,MAAhB,CAAuB;AACnBT,kBAAMA,IADa;AAEnBC,gBAAIA,EAFe,EAEX;AACRS,kBAAM,iBAAOC,aAHM,CAGQ;AAHR,SAAvB,EAIG,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACjB,gBAAID,GAAJ,EAAS;AACLR,uBAAOQ,GAAP;AACH,aAFD,MAEO;AACHT,wBAAQU,QAAQC,GAAhB;AACH;AACJ,SAVD;AAWH,KAbM,CAAP;AAcH,CAfD;;kBAiBe;AACXf;AADW,C","file":"twilio.js","sourcesContent":["import twilio from 'twilio';\nimport config from \"../../config.json\";\n\nconst sendMessageTwilio = (body, to) => {\n    return new Promise((resolve, reject) => {\n        var client = new twilio(config.twilio_accountSid, config.twilio_authToken);\n        client.messages.create({\n            body: body,\n            to: to, // Text this number\n            from: config.twilio_number // From a valid Twilio number\n        }, (err, message) => {\n            if (err) {\n                reject(err)\n            } else {\n                resolve(message.sid)\n            }\n        })\n    })\n};\n\nexport default {\n    sendMessageTwilio\n};"]}